# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  base_url: !secret http_base_url
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  ip_ban_enabled: True
  login_attempts_threshold: 3

# Text to speech
tts:
  - platform: google_translate

homeassistant:
  customize: !include customize.yaml

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         LOGGER
#
#--------------------------------------------------------------------------------------------------------------------------------

logger:
  default: critical
  
# database to memory not disk
recorder:
  purge_keep_days: 5
  db_url: 'sqlite:///:memory:'  # Set database to use memory, not SD card

#  logs:  
#    custom_components.fronius_basic: debug
#    custom_components.fronius_inverter: debug
#    homeassistant.components.mqtt: debug




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         GOOGLE ASSISTANT
#
#--------------------------------------------------------------------------------------------------------------------------------

google_assistant:
  project_id: !secret google_assistant_project_id
  service_account: !include service_account.json




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         WEATHER
#
#--------------------------------------------------------------------------------------------------------------------------------
    
weather:
  - platform: openweathermap
    name: Home
    api_key: !secret weather_api_key




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         TELEGRAM BOT
#
#--------------------------------------------------------------------------------------------------------------------------------

telegram_bot:
  - platform: polling
    api_key: !secret telegram_bot_api_key
    allowed_chat_ids:
      - !secret telegram_bot_allowed_chat_id_1
      - !secret telegram_bot_allowed_chat_id_2




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         SMARTIR CLIMATE
#
#--------------------------------------------------------------------------------------------------------------------------------

smartir:
    update_branch: rc
    
climate:
  - platform: smartir
    name: Aire estudio
    device_code: 1065
    controller_data: cmnd/mando_estudio/irsend
    temperature_sensor: sensor.aire_estudio_temperature
    humidity_sensor: sensor.aire_estudio_humidity

  - platform: smartir
    name: Aire pasillo
    device_code: 1261
    controller_data: cmnd/mando_pasillo/irhvac
    temperature_sensor: sensor.aire_pasillo_temperature
    humidity_sensor: sensor.aire_pasillo_humidity

  - platform: smartir
    name: Aire salón
    device_code: 1261
    controller_data: cmnd/mando_salon/irhvac
    temperature_sensor: sensor.aire_salon_temperature
    humidity_sensor: sensor.aire_salon_humidity




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         SWITCH
#
#--------------------------------------------------------------------------------------------------------------------------------

switch:

# Blitzwolfs

  - platform: mqtt
    name: Iqas
    state_topic: iqas/relay/0
    command_topic: iqas/relay/0/set
    payload_on: 1
    payload_off: 0
    availability_topic: iqas/status
    payload_available: 1
    payload_not_available: 0

  - platform: mqtt
    name: pastor
    state_topic: pastor/relay/0
    command_topic: pastor/relay/0/set
    payload_on: 1
    payload_off: 0
    availability_topic: pastor/status
    payload_available: 1

  - platform: mqtt
    name: tv_kitchen
    state_topic: tv_kitchen/relay/0
    command_topic: tv_kitchen/relay/0/set
    payload_on: 1
    payload_off: 0
    availability_topic: tv_kitchen/status
    payload_available: 1
    payload_not_available: 0

# Sonoff TH16
  - platform: mqtt
    name: Interruptor Jardín
    state_topic: sonoff_jardin/relay/0
    command_topic: sonoff_jardin/relay/0/set
    payload_on: 1
    payload_off: 0
    availability_topic: sonoff-th16/status
    payload_available: 1
    payload_not_available: 0


#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         SENSOR
#
#--------------------------------------------------------------------------------------------------------------------------------

sensor:

#------------------------------------------------------  FRONIUS BASIC  -----------------------------------------------------------
  - platform: fronius_basic
    ip_address: 192.168.1.6
    name: 'Fronius'
    scan_interval: 10
    
# Fronius sensor's list:
#   fronius_solar
#   fronius_energy_today
#   fronius_house_load
#   fronius_grid_injection (- from grid , + to grid)
#   fronius_self_consumption
#   fronius_inverter_1
#        ...
#   fronius_inverter_n


#------------------------------------------------------  FRONIUS INVERTER  --------------------------------------------------------
#  - platform: fronius_inverter
#    ip_address: 192.168.1.6
#    monitored_conditions:
#      - dc_current
#      - dc_voltage


#------------------------------------------------------  PV  -----------------------------------------------------------
  - platform: template
    sensors: 
      pv_power:
        unit_of_measurement: W
        value_template: >-
          {% if (states('sensor.pv_power_2') | float) > 0 %}
            {{ (states('sensor.pv_power_2') | float) | round(0) }}
          {% else %}
            {{ 0 }}
          {% endif %}
        friendly_name: 'Producción solar'

      pv_energy_today:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.fronius_energy_today') | float) + (states('sensor.ap_qs1_energy_today') | float) ) | round(1) }}"
        friendly_name: 'Energía producida'

      pv_energy_auto_today:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.pv_energy_today') | float) - (states('sensor.grid_energy_returned_today') | float) ) | round(1) }}"
        friendly_name: 'Energía autoconsumida'

      pv_house_load:
        unit_of_measurement: W
        value_template: "{{ ( (states('sensor.grid_power') | float) + (states('sensor.pv_power') | float) ) | round(0) }}"

      pv_self_consumption:
        unit_of_measurement: '%'
        value_template: >-
          {% if (states('sensor.pv_power') | float) <= 0 %}
            {{ 0 }}
          {% elif (states('sensor.pv_house_load') | float) > (states('sensor.pv_power') | float) %}
            {{ 100 }}
          {% else %}
            {{ (( (states('sensor.pv_house_load') | float) / (states('sensor.pv_power') | float) ) * 100) | round(0) }}
          {% endif %}

      pv_self_sufficient:
        unit_of_measurement: '%'
        value_template: >-
          {% if (states('sensor.pv_power') | float) <= 0 %}
            {{ 0 }}
          {% elif (states('sensor.grid_power') | float) <= 0 %}
            {{ 100 }}
          {% else %}
            {{ (( (states('sensor.pv_power') | float) / (states('sensor.pv_house_load') | float) ) * 100) | round(0) }}
          {% endif %}

      pv_grid_consumption:
        unit_of_measurement: W
        value_template: "{{ states('sensor.grid_power') | round(0) }}"

      fronius_power_round:
        unit_of_measurement: W
        value_template: "{{ states('sensor.fronius_power') | round(0) }}"

      ap_qs1_power_round:
        unit_of_measurement: W
        value_template: "{{ states('sensor.ap_qs1_power') | round(0) }}"

#---------------------------------------------------------  WIBEEE  ---------------------------------------------------------------
#  - platform: wibeee
#    host: 192.168.1.202
#    scan_interval: 5


#------------------------------------------------------  DERVIVADOR IQAS  ---------------------------------------------------------
#  - platform: mqtt
#    name: to_grid
#    state_topic: /opends/wgrid
#    unit_of_measurement: W

#  - platform: mqtt
#    name: solar
#    state_topic: /opends/wsolar
#    unit_of_measurement: W

#  - platform: mqtt
#    name: pwm
#    state_topic: /opends/pwm
#    unit_of_measurement: '%'
    
#  - platform: mqtt
#    name: energy
#    state_topic: /opends/wtoday
#    unit_of_measurement: kWh


#------------------------------------------------------  BLITZWOLF  ------------------------------------------------------------

# Blitzwolf IQAS (212)
  - platform: mqtt
    name: iqas_power
    state_topic: iqas/power
    unit_of_measurement: W
  - platform: mqtt
    name: iqas_energy
    state_topic: iqas/energy
    unit_of_measurement: kWh

# Blitzwolf Pastor (211)
  - platform: mqtt
    name: pastor_power
    state_topic: pastor/power
    unit_of_measurement: W
 
# Blitzwolf TV kitchen (213)
  - platform: mqtt
    name: tv_kitchen_power
    state_topic: tv_kitchen/power
    unit_of_measurement: W

#------------------------------------------------------  TEMPLATE ELECTRODOMESTICOS  ----------------------------------------------------------
  - platform: template
    sensors: 
      induccion_power_adjust:
        unit_of_measurement: W
        value_template: >-
          {% if (states('sensor.induccion_power') | float) > 0 %}
            {{ ((states('sensor.induccion_power') | float)) }}
          {% else %}
            {{ 0.0 }}
          {% endif %}

      electrodomesticos_potencia:
        unit_of_measurement: W
        value_template: "{{ ((states('sensor.horno_power') | int) + (states('sensor.induccion_power_adjust') | int) + (states('sensor.microondas_power') | int) + (states('sensor.lavadora_power') | int) + (states('sensor.secadora_power') | int) + (states('sensor.lavavajillas_power') | int) + (states('sensor.nevera_power') | int)) | round(0) }}"
        friendly_name: 'Electrodomésticos'

      electrodomesticos_energy_today:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.horno_energy_today') | float) + (states('sensor.induccion_energy_today') | float) + (states('sensor.microondas_energy_today') | float) + (states('sensor.lavadora_energy_today') | float) + (states('sensor.secadora_energy_today') | float) + (states('sensor.lavavajillas_energy_today') | float) + (states('sensor.nevera_energy_today') | float) ) | round(1) }}"
        friendly_name: 'Electrodomésticos hoy'


#------------------------------------------------------  TEMPLATE AIRES  ----------------------------------------------------------
  - platform: template
    sensors: 
      aires_potencia:
        unit_of_measurement: W
        value_template: "{{ ((states('sensor.aire_estudio_power') | float) + (states('sensor.aire_pasillo_power') | float) + (states('sensor.aire_salon_power') | float)) | round(0) }}"
        friendly_name: 'Aires'

      aires_energy_today:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.aire_estudio_energy_today') | float) + (states('sensor.aire_pasillo_energy_today') | float) + (states('sensor.aire_salon_energy_today') | float) ) | round(1) }}"
        friendly_name: 'Aires hoy'

        
#------------------------------------------------------  TEMPLATE INFORMATICA  ----------------------------------------------------------
  - platform: template
    sensors: 
      informatica_potencia:
        unit_of_measurement: W
        value_template: "{{ ((states('sensor.pc_despacho_power') | int) + (states('sensor.pc_albert_power') | int) + (states('sensor.pc_agusti_power') | int)) | round(0) }}"
        friendly_name: 'Informática'

      informatica_energy:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.pc_despacho_energy') | float) + (states('sensor.pc_albert_energy') | float) + (states('sensor.pc_agusti_energy') | float)) | round(1) }}"
        friendly_name: 'Informática energía'


#-------------------------------------------------------  SONOFF --------------------------------------------------------------

  - platform: mqtt
    name: Temperatura jardín
    state_topic: sonoff_jardin/temperature
    unit_of_measurement: °C
 
  - platform: mqtt
    name: Humedad jardín
    state_topic: sonoff_jardin/humidity
    unit_of_measurement: '%'


#----------------------------------------------------  ENERGIA POR DIAS  ----------------------------------------------------------

# Calculo de la energia de hoy, ayer y anteayer
  - platform: mqtt
    state_topic: ha/fronius_energy_midnight
    name: 'fronius_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.fronius_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/ap_qs1_energy_midnight
    name: 'ap_qs1_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.ap_qs1_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/grid_energy_midnight
    name: 'grid_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.grid_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/grid_energy_returned_midnight
    name: 'grid_energy_returned_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.grid_energy_returned_midnight }}'

  - platform: mqtt
    state_topic: ha/grid_energy_hour
    name: 'grid_energy_hour'
    unit_of_measurement: kWh
    value_template: '{{ value_json.grid_energy_hour }}'

  - platform: mqtt
    state_topic: ha/grid_energy_returned_hour
    name: 'grid_energy_returned_hour'
    unit_of_measurement: kWh
    value_template: '{{ value_json.grid_energy_returned_hour }}'



  - platform: mqtt
    state_topic: ha/induccion_energy_midnight
    name: 'induccion_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.induccion_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/horno_energy_midnight
    name: 'horno_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.horno_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/microondas_energy_midnight
    name: 'microondas_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.microondas_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/lavadora_energy_midnight
    name: 'lavadora_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.lavadora_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/secadora_energy_midnight
    name: 'secadora_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.secadora_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/lavavajillas_energy_midnight
    name: 'lavavajillas_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.lavavajillas_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/nevera_energy_midnight
    name: 'nevera_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.nevera_energy_midnight }}'



  - platform: mqtt
    state_topic: ha/iqas_energy_midnight
    name: 'iqas_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.iqas_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/iqas_energy_yesterday
    name: 'iqas_energy_yesterday'
    unit_of_measurement: kWh
    value_template: '{{ value_json.iqas_energy_yesterday }}'

  - platform: mqtt
    state_topic: ha/iqas_energy_before_yesterday
    name: 'iqas_energy_before_yesterday'
    unit_of_measurement: kWh
    value_template: '{{ value_json.iqas_energy_before_yesterday }}'

  - platform: mqtt
    state_topic: ha/aire_salon_energy_midnight
    name: 'aire_salon_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.aire_salon_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/aire_pasillo_energy_midnight
    name: 'aire_pasillo_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.aire_pasillo_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/aire_estudio_energy_midnight
    name: 'aire_estudio_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.aire_estudio_energy_midnight }}'

  - platform: mqtt
    state_topic: ha/informatica_energy_midnight
    name: 'informatica_energy_midnight'
    unit_of_measurement: kWh
    value_template: '{{ value_json.informatica_energy_midnight }}'



  - platform: template
    sensors:
      from_grid_hour:
        value_template: >-
          {% if (states('sensor.grid_energy_hour') | float) > (states('sensor.grid_energy') | float) %}
            {{ ((states('sensor.grid_energy') | float)) }}
          {% else %}
            {{ ((states('sensor.grid_energy') | float) - (states('sensor.grid_energy_hour') | float)) }}
          {% endif %}
        friendly_name: 'From grid'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      to_grid_hour:
        value_template: >-
          {% if (states('sensor.grid_energy_returned_hour') | float) > (states('sensor.grid_energy_returned') | float) %}
            {{ ((states('sensor.grid_energy_returned') | float)) }}
          {% else %}
            {{ ((states('sensor.grid_energy_returned') | float) - (states('sensor.grid_energy_returned_hour') | float)) }}
          {% endif %}
        friendly_name: 'To grid'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      balance_neto_horario:
        value_template: "{{ ((states('sensor.to_grid_hour') | float) - (states('sensor.from_grid_hour') | float)) | round(2) }}"
        friendly_name: 'Balance neto horario'
        unit_of_measurement: kWh


  - platform: template
    sensors:
      fronius_energy_today:
        value_template: >-
          {% if (states('sensor.fronius_energy_midnight') | float) > (states('sensor.fronius_energy') | float) %}
            {{ ((states('sensor.fronius_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.fronius_energy') | float) - (states('sensor.fronius_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Fronius hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      ap_qs1_energy_today:
        value_template: >-
          {% if (states('sensor.ap_qs1_energy_midnight') | float) > (states('sensor.ap_qs1_energy') | float) %}
            {{ ((states('sensor.ap_qs1_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.ap_qs1_energy') | float) - (states('sensor.ap_qs1_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'APsystems hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      grid_energy_today:
        value_template: >-
          {% if (states('sensor.grid_energy_midnight') | float) > (states('sensor.grid_energy') | float) %}
            {{ ((states('sensor.grid_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.grid_energy') | float) - (states('sensor.grid_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Energía red'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      grid_energy_returned_today:
        value_template: >-
          {% if (states('sensor.grid_energy_returned_midnight') | float) > (states('sensor.grid_energy_returned') | float) %}
            {{ ((states('sensor.grid_energy_returned') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.grid_energy_returned') | float) - (states('sensor.grid_energy_returned_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Energía inyectada'
        unit_of_measurement: kWh



  - platform: template
    sensors:
      iqas_energy_today:
        value_template: >-
          {% if (states('sensor.iqas_energy_midnight') | float) > (states('sensor.iqas_energy') | float) %}
            {{ ((states('sensor.iqas_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.iqas_energy') | float) - (states('sensor.iqas_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Energía hoy'
        unit_of_measurement: kWh



  - platform: template
    sensors:
      induccion_energy_today:
        value_template: >-
          {% if (states('sensor.induccion_energy_midnight') | float) > (states('sensor.induccion_energy') | float) %}
            {{ ((states('sensor.induccion_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.induccion_energy') | float) - (states('sensor.induccion_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Inducción hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      horno_energy_today:
        value_template: >-
          {% if (states('sensor.horno_energy_midnight') | float) > (states('sensor.horno_energy') | float) %}
            {{ ((states('sensor.horno_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.horno_energy') | float) - (states('sensor.horno_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Horno + microondas hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      microondas_energy_today:
        value_template: >-
          {% if (states('sensor.microondas_energy_midnight') | float) > (states('sensor.microondas_energy') | float) %}
            {{ ((states('sensor.microondas_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.microondas_energy') | float) - (states('sensor.microondas_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Thermomix + Nespresso hoy'
        unit_of_measurement: kWh
        
  - platform: template
    sensors:
      lavadora_energy_today:
        value_template: >-
          {% if (states('sensor.lavadora_energy_midnight') | float) > (states('sensor.lavadora_energy') | float) %}
            {{ ((states('sensor.lavadora_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.lavadora_energy') | float) - (states('sensor.lavadora_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Lavadora hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      secadora_energy_today:
        value_template: >-
          {% if (states('sensor.secadora_energy_midnight') | float) > (states('sensor.secadora_energy') | float) %}
            {{ ((states('sensor.secadora_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.secadora_energy') | float) - (states('sensor.secadora_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Secadora hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      lavavajillas_energy_today:
        value_template: >-
          {% if (states('sensor.lavavajillas_energy_midnight') | float) > (states('sensor.lavavajillas_energy') | float) %}
            {{ ((states('sensor.lavavajillas_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.lavavajillas_energy') | float) - (states('sensor.lavavajillas_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Lavavajillas hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      nevera_energy_today:
        value_template: >-
          {% if (states('sensor.nevera_energy_midnight') | float) > (states('sensor.nevera_energy') | float) %}
            {{ ((states('sensor.nevera_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.nevera_energy') | float) - (states('sensor.nevera_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Nevera hoy'
        unit_of_measurement: kWh




  - platform: template
    sensors:
      aire_salon_energy_today:
        value_template: >-
          {% if (states('sensor.aire_salon_energy_midnight') | float) > (states('sensor.aire_salon_energy') | float) %}
            {{ ((states('sensor.aire_salon_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.aire_salon_energy') | float) - (states('sensor.aire_salon_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'AC salón hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      aire_pasillo_energy_today:
        value_template: >-
          {% if (states('sensor.aire_pasillo_energy_midnight') | float) > (states('sensor.aire_pasillo_energy') | float) %}
            {{ ((states('sensor.aire_pasillo_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.aire_pasillo_energy') | float) - (states('sensor.aire_pasillo_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'AC pasillo hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      aire_estudio_energy_today:
        value_template: >-
          {% if (states('sensor.aire_estudio_energy_midnight') | float) > (states('sensor.aire_estudio_energy') | float) %}
            {{ ((states('sensor.aire_estudio_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.aire_estudio_energy') | float) - (states('sensor.aire_estudio_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'AC estudio hoy'
        unit_of_measurement: kWh

  - platform: template
    sensors:
      informatica_energy_today:
        value_template: >-
          {% if (states('sensor.informatica_energy_midnight') | float) > (states('sensor.informatica_energy') | float) %}
            {{ ((states('sensor.informatica_energy') | float)) | round(1)}}
          {% else %}
            {{ ((states('sensor.informatica_energy') | float) - (states('sensor.informatica_energy_midnight') | float)) | round(1)}}
          {% endif %}
        friendly_name: 'Informática hoy'
        unit_of_measurement: kWh        
        
        
#----------------------------------------------------  TEMPLATE EXCEDENTES  -------------------------------------------------------
# template
#  - platform: template 
#    sensors: 
# Potencia gestionada por el gestor de excedentes
#      excedentes:
#        unit_of_measurement: W
#        value_template: "{{ ((states('sensor.ESPURNA_8A60CC_power') | int) + (states('sensor.ESPURNA_C9E37D_power') | int) + (states('sensor.ESPURNA_553226_power') | int) - 1) | round(0) }}"




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         LIGHT
#
#--------------------------------------------------------------------------------------------------------------------------------

light:




#------------------------------------------------------  END OF DOCUMENT  ---------------------------------------------------------
