# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
#  base_url: !secret http_base_url
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem
  ip_ban_enabled: True
  login_attempts_threshold: 3

# Text to speech
tts:
  - platform: google_translate

homeassistant:
  customize: !include customize.yaml
  packages: !include_dir_named packages

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml
  
# database to memory not disk
recorder:
  purge_keep_days: 5
  db_url: 'sqlite:///:memory:'  # Set database to use memory, not SD card




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         GOOGLE ASSISTANT
#
#--------------------------------------------------------------------------------------------------------------------------------

google_assistant:
  project_id: !secret google_assistant_project_id
  service_account: !include service_account.json




#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         SWITCH
#
#--------------------------------------------------------------------------------------------------------------------------------

switch:
# Sonoff TH16
  - platform: mqtt
    name: Interruptor Jardín
    state_topic: sonoff_jardin/relay/0
    command_topic: sonoff_jardin/relay/0/set
    payload_on: 1
    payload_off: 0
    availability_topic: sonoff-th16/status
    payload_available: 1
    payload_not_available: 0


#--------------------------------------------------------------------------------------------------------------------------------
#
#                                                         SENSOR
#
#--------------------------------------------------------------------------------------------------------------------------------

sensor:
#---------------------------------------------------------  WIBEEE  ---------------------------------------------------------------
#  - platform: wibeee
#    host: 192.168.1.202
#    scan_interval: 5


#------------------------------------------------------  DERVIVADOR IQAS  ---------------------------------------------------------
#  - platform: mqtt
#    name: to_grid
#    state_topic: /opends/wgrid
#    unit_of_measurement: W

#  - platform: mqtt
#    name: solar
#    state_topic: /opends/wsolar
#    unit_of_measurement: W

#  - platform: mqtt
#    name: pwm
#    state_topic: /opends/pwm
#    unit_of_measurement: '%'
    
#  - platform: mqtt
#    name: energy
#    state_topic: /opends/wtoday
#    unit_of_measurement: kWh


#------------------------------------------------------  TEMPLATE ELECTRODOMESTICOS  ----------------------------------------------------------
  - platform: template
    sensors: 
      induccion_power_adjust:
        unit_of_measurement: W
        value_template: >-
          {% if (states('sensor.induccion_power') | float) > 0 %}
            {{ ((states('sensor.induccion_power') | float)) }}
          {% else %}
            {{ 0.0 }}
          {% endif %}

      electrodomesticos_potencia:
        unit_of_measurement: W
        value_template: "{{ ((states('sensor.horno_power') | int) + (states('sensor.induccion_power_adjust') | int) + (states('sensor.microondas_power') | int) + (states('sensor.lavadora_power') | int) + (states('sensor.secadora_power') | int) + (states('sensor.lavavajillas_power') | int) + (states('sensor.nevera_power') | int)) | round(0) }}"
        friendly_name: 'Electrodomésticos'

      electrodomesticos_energy_today:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.horno_energy_today') | float) + (states('sensor.induccion_energy_today') | float) + (states('sensor.microondas_energy_today') | float) + (states('sensor.lavadora_energy_today') | float) + (states('sensor.secadora_energy_today') | float) + (states('sensor.lavavajillas_energy_today') | float) + (states('sensor.nevera_energy_today') | float) ) | round(1) }}"
        friendly_name: 'Electrodomésticos hoy'


#------------------------------------------------------  TEMPLATE AIRES  ----------------------------------------------------------
  - platform: template
    sensors: 
      aires_potencia:
        unit_of_measurement: W
        value_template: "{{ ((states('sensor.aire_estudio_power') | float) + (states('sensor.aire_pasillo_power') | float) + (states('sensor.aire_salon_power') | float)) | round(0) }}"
        friendly_name: 'Aires'

      aires_energy_today:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.aire_estudio_energy_today') | float) + (states('sensor.aire_pasillo_energy_today') | float) + (states('sensor.aire_salon_energy_today') | float) ) | round(1) }}"
        friendly_name: 'Aires hoy'

        
#------------------------------------------------------  TEMPLATE INFORMATICA  ----------------------------------------------------------
  - platform: template
    sensors: 
      informatica_potencia:
        unit_of_measurement: W
        value_template: "{{ ((states('sensor.pc_despacho_power') | int) + (states('sensor.pc_albert_power') | int) + (states('sensor.pc_agusti_power') | int)) | round(0) }}"
        friendly_name: 'Informática'

      informatica_energy:
        unit_of_measurement: kWh
        value_template: "{{ ((states('sensor.pc_despacho_energy') | float) + (states('sensor.pc_albert_energy') | float) + (states('sensor.pc_agusti_energy') | float)) | round(1) }}"
        friendly_name: 'Informática energía'


#-------------------------------------------------------  SONOFF --------------------------------------------------------------

  - platform: mqtt
    name: Temperatura jardín
    state_topic: sonoff_jardin/temperature
    unit_of_measurement: °C
 
  - platform: mqtt
    name: Humedad jardín
    state_topic: sonoff_jardin/humidity
    unit_of_measurement: '%'




#------------------------------------------------------  END OF DOCUMENT  ---------------------------------------------------------
